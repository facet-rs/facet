---
source: facet-macros-emit/tests/codegen/mod.rs
expression: "expand(r#\"\n        /// what about \"quotes\"\n        #[derive(Facet)]\n        struct Foo {}\n        \"#)"
---
static FOO_SHAPE: &'static ::facet::Shape = <Foo as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl<'__facet> ::facet::Facet<'__facet> for Foo {
    const SHAPE: &'static ::facet::Shape = &const {
        let fields: &'static [::facet::Field] = &const { [] };
        ::facet::Shape::builder_for_sized::<Self>()
            .vtable({
                let mut vtable =
                    ::facet::value_vtable!(Self, |f, _opts| ::core::fmt::Write::write_str(
                        f, "Foo"
                    ));
                vtable
            })
            .type_identifier("Foo")
            .ty(::facet::Type::User(::facet::UserType::Struct(
                ::facet::StructType::builder()
                    .repr(::facet::Repr::default())
                    .kind(::facet::StructKind::Struct)
                    .fields(fields)
                    .build(),
            )))
            .doc(&[" what about \"quotes\""])
            .build()
    };
}
